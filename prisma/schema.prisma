// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           String         @id @default(cuid())
  firstName    String
  lastName     String?
  email        String         @unique
  avatarUrl    String
  createdAt    DateTime       @default(now())
  conversation conversation[]
  emailId      email?
  meet meet?
}

model email {
  id String @id @default(cuid())

  userId       String   @unique
  emailAddress String
  refreshToken String
  accessToken  String
  expireIn     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         user     @relation(fields: [userId], references: [id])
}
model meet {
  id String @id @default(cuid())

  userId       String   @unique
  emailAddress String
  refreshToken String
  accessToken  String
  expireIn     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         user     @relation(fields: [userId], references: [id])
}

model conversation {
  id        String    @id @default(cuid())
  userId    String
  title     String
  user      user      @relation(references: [id], fields: [userId])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  message   message[]
}

model message {
  id             String       @id @default(cuid())
  conversationId String
  content        String
  role           ROLE
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  conversation   conversation @relation(fields: [conversationId], references: [id])
}

enum ROLE {
  USER
  SYSTEM
}
